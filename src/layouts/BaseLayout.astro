---
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import "@fontsource-variable/overpass-mono";
import "@fontsource-variable/inconsolata";
import { getImage } from "astro:assets";
let baseUrl = new URL(Astro.request.url).origin;
import { ClientRouter } from "astro:transitions";
import CookieConsent from "../components/CookieConsent.astro";
//TODO
const metaImage = await getImage({
  src: "https://cdn.erfianugrah.com/Tenhult_3.JPG",
  alt: "cover_image",
  inferSize: true,
  height: "720",
  decoding: "async",
  format: "webp",
  loading: "lazy",
});

//TODO
const favicon_webp = await getImage({
  src: "https://cdn.erfianugrah.com/ea_favicon.png",
  alt: "favicon",
  inferSize: true,
  height: "400",
  decoding: "async",
  format: "webp",
  loading: "lazy",
});

const pageTitle = "travel.blog";
const metaDescription = "name's and name Travel Blog";
const {
  image,
  description,
  author,
  pubDate,
  updatedDate,
  title,
  site_name,
  is404Page = false,
  href,
  alternateHref,
} = Astro.props;
const currentLocale = Astro.currentLocale;
---

<html
  class="bg-[rgb(244,242,238)] dark:bg-[rgb(34,33,37)]"
  lang={currentLocale}
>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/webp" href={favicon_webp.src} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="og:title" content={title || pageTitle} />
    <meta name="og:description" content={description || metaDescription} />
    <meta name="description" content={description || metaDescription} />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content={site_name || "travel.blog"} />
    <meta name="og:image" content={image || `${baseUrl}${metaImage?.src}`} />
    <meta name="article:author" content={author || "name"} />
    <meta name="article:published_time" content={pubDate} />
    <meta name="article:modified_time" content={updatedDate} />
    <meta name="og:url" content={Astro.url} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={Astro.site} />
    <meta property="twitter:url" content={Astro.url} />
    <meta
      name="twitter:card"
      content={image || `${baseUrl}${metaImage?.src}`}
    />
    <meta name="twitter:title" content={title || pageTitle} />
    <meta name="twitter:description" content={description || metaDescription} />
    <meta
      name="twitter:image"
      content={image || `${baseUrl}${metaImage?.src}`}
    />

    <link
      rel="alternate"
      hreflang="de"
      href={`https://www.travel.blog/${currentLocale === "de" ? href : alternateHref}`}
    />
    <link
      rel="alternate"
      hreflang="en"
      href={`https://www.travel.blog/en/${currentLocale === "de" ? alternateHref : href}`}
    />

    <title>{pageTitle}</title>

    <script
      is:inline
      src="https://www.googletagmanager.com/gtag/js?id=GTM-xxxxx"></script>

    <script>
      declare global {
        interface Window {
          dataLayer: Record<string, any>[];
          gtag: (...args: any[]) => void;
        }
      }

      // This is the important part!
      document.addEventListener("astro:page-load", () => {
        window.dataLayer = window.dataLayer || [];

        window.gtag = function gtag(...args: any[]) {
          window.dataLayer.push(arguments);
        };

        window.gtag("js", new Date());
        window.gtag("consent", "default", {
          ad_storage: "denied",
          ad_user_data: "denied",
          ad_personalization: "denied",
          analytics_storage: "denied",
        });
        window.gtag("config", "GTM-xxxxxx");
      });
    </script>

    <script is:inline data-category="analytics">
      function updateConsents() {
        gtag("consent", "update", {
          ad_storage: "granted",
          ad_user_data: "granted",
          ad_personalization: "granted",
          analytics_storage: "granted",
        });
      }
    </script>

    <!-- We would have to update the gtag integration with viewtransitions -->
    <ClientRouter />
  </head>
  <body
    class="flex flex-col flex-wrap md:pt-8 md:pr-16 md:pb-8 md:pl-16 p-8 max-w-full min-h-screen dark:bg-[rgb(34,33,37)] dark:text-[rgb(245,245,245)]"
  >
    <Header is404Page={is404Page} alternateHref={alternateHref} />
    <div class="mt-8">
      <slot />
    </div>
    <Footer alternateHref={alternateHref} />

    <div transition:persist="find-me-on-the-other-side" id="cc-container">
      <CookieConsent />

      <script is:inline>
        // Restore the `show--consent` class if it was present before the page swap
        document.addEventListener("astro:before-preparation", (event) => {
          const htmlClassName = window.document.documentElement.className;
          const consentClassPresent = htmlClassName.includes("show--consent")
            ? true
            : false;
          window._showConsentClass = consentClassPresent;
        });

        document.addEventListener("astro:before-swap", (event) => {
          const showConsent = window._showConsentClass ? ` show--consent` : "";
          event.newDocument.documentElement.className += showConsent;
        });
      </script>
    </div>
  </body>
</html>
<style is:global>
  .astro-code,
  .astro-code span {
    background-color: var(--shiki-light-bg) !important;
    color: var(--shiki-light) !important;
    font-style: var(--shiki-light-font-style) !important;
    font-weight: var(--shiki-light-font-weight) !important;
    text-decoration: var(--shiki-light-text-decoration) !important;
  }
  .dark .astro-code,
  .dark .astro-code span {
    background-color: var(--shiki-dark-bg) !important;
    color: var(--shiki-dark) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }
</style>
